$(function () {
	var popupContainer = '.popup-container',
	    closePopupIcon = '.popup-close-icon';

	function popupCloser($el) {
		$el.hide();
		$el.children().remove();
		sb.popup.resetPopupData();
	}

	// Events

	$(document).on('click', function (e) {
		var $el = $(e.target);
		var bln = $el.hasClass('.toggle-click') || $el.parents('.toggle-click').length;
		// var bln = 	$el.hasClass('popup-click')
		// 			|| $el.hasClass('page-click')
		// 			|| $el.hasClass('toggle-click')
		// 			|| $el.parents('.popup-click').length
		// 			|| $el.parents('page-click').length
		// 			|| $el.parents('.toggle-click').length;
		if (!bln) {
			$('.toggle-click').removeClass('active');
		}
	}).on('click', closePopupIcon, function () {
		popupCloser($(this).parents(popupContainer));
	}).on('keyup', function (e) {
		var keycode = e.which || e.keyCode;
		if (keycode == 27) {
			popupCloser($(popupContainer));
		}
	}).on('click', popupContainer, function (e) {
		if ($(e.target) === $(popupContainer)) {
			$(popupContainer)[0].removeChild($(popupContainer).children()[0]);
		}
	}).on('click', popupContainer + ' .cancel-btn', function (e) {
		e.preventDefault();
		popupCloser($(this).parents(popupContainer));
	}).on('click', '.nav-btn', function (e) {
		e.preventDefault();

		sb.registerData();
		var $dataUrl = $(this).data('index');
		if ($dataUrl >= 0) {
			sb.callPopup($dataUrl);
		}
	}).on('click', '.toggle-click', function (e) {
		// e.stopPropagation();
		e.preventDefault();
		if ($(e.target).hasClass('active') || $(e.target).parents('.active').length) {
			if ($(e.target).hasClass('anti-toggle-click') || $(e.target).parents('.anti-toggle-click').length) {
				return false;
			}
		}
		var $this = $(this);
		$('.active').not($this).removeClass('active');
		$this.toggleClass('active');
	}).on('click', '.popup-click', function () {
		var $self = $(this);
		var $dataHolder = $self.parents('.data-holder');
		if ($dataHolder.length) {
			sb.insertPopupData($dataHolder);
		} else if ($self.hasClass('data-holder')) {
			sb.insertPopupData($self);
		} else {
			sb.log("Didn't provide data-holder class to the element or its parent");
		}

		// var key = $(this).data('key');
		// var id = $(this).data('id');
		// if(key && id){
		// 	Kenseo.popup.data = Kenseo.data[key][id];
		// }

		sb.navigate('popup', this);
	}).on('click', '.overlay-click', function () {
		sb.navigate('overlay', this);
	}).on('click', '.page-click', function (e) {
		// To avoid default behaviour of the anchor element
		e.preventDefault();
		// Don't call other functions attached to the same event.
		e.stopPropagation();
		// Default application operations
		sb.navigate('page', this);

		// if the link is in a sub menu section, hide that section
		$(this).parents('.toggle-click').removeClass('active');

		// if the link is in a popup, close that popup
		popupCloser($(popupContainer));

		// if the link is an anchor element, redirect it.
		// Refer: http://stackoverflow.com/a/31177540/1577396
		if (this.tagName.toLowerCase() === "a") {
			window.location.href = DOMAIN_UI_URL + $(this).attr('href');
		}
	}).on('click', '.share-btn', function () {
		var container = document.querySelectorAll('.share-artefact-people-item');
		var sharedDetails = [];
		for (var i = 0; i < container.length; i++) {
			var $elem = $(container[i]);
			var userId = $elem.attr('data-id');
			var permissions = $elem.find('.user-permission');
			for (var j = 0; j < permissions.length; j++) {
				var $permission = $(permissions[j]);
				if ($permission[0].checked == true) {
					var permissionType = $($permission[0]).attr('data-elem') == 'comment' ? 'c' : 's';
					sharedDetails.push({
						'userId': userId,
						'permission': permissionType
					});
				}
			}
		}
		// sb.setPopupData(JSON.stringify(sharedDetails), 'sharedTo')
		console.log('parsing is completed');
	}).on('click', '.done-btn', function () {
		sb.registerData();
		var $self = $(this);
		var actionType = sb.getPopupData('actionType');
		var data = null;
		var file = sb.getPopupData('file');
		var plainData = false,
		    contentType = null,
		    processData = null;

		var url = "";

		if (file) {
			var data = new FormData();

			for (x in Kenseo.popup.data) {
				var dump = sb.getPopupData(x);
				if (typeof dump === 'object' && x !== 'file') {
					dump = JSON.stringify(dump);
				}
				data.append(x, dump);
			}

			data.append('type', 'I');
			data.append('sid', Kenseo.cookie.sessionid());
			type = 'POST';
			url = sb.getRelativePath('extUpload.php');
			plainData = true;
			contentType = false;
			processData = false;
		} else {
			data = sb.getPopupData();
			url = sb.getRelativePath(actionType);
			type = 'GET';
		}

		sb.ajaxCall({
			url: url,
			data: data,
			type: type,
			plainData: plainData,
			contentType: contentType,
			processData: processData,
			success: function success() {
				popupCloser($self.parents(popupContainer));
				// if (Kenseo.currentModel) {
				if (actionType === 'archiveProject') {
					// console.dir(Kenseo.currentModel);
					// console.dir(Kenseo.currentModel.collection);
					// Kenseo.currentModel.collection.remove(Kenseo.currentModel);
					sb.refresh.section('dashboard', 'db-projects');
				} else if (actionType === 'archiveArtefact') {
					Kenseo.currentModel.collection.remove(Kenseo.currentModel);
				} else if (actionType === 'deleteArtefact') {
					Kenseo.currentModel.collection.remove(Kenseo.currentModel);
				} else if (actionType === 'addProject') {
					// Add the project to the Dashboard section
					// var $projectSectionContent = $('.projects-section-content');
					// $projectSectionContent.find('.no-items').hide();
					// if($projectSectionContent.length){
					// 	var projectView = new Kenseo.views.Project();
					// 	$projectSectionContent.append(projectView.render(
					// 		{
					// 			name: data.projectName.value,
					// 			last_updated_date: new Date().toString(),
					// 			id: 'x3'
					// 		}
					// 	).$el);
					// }
					sb.refresh.section('dashboard', 'db-projects');
				} else if (actionType === 'addArtefact') {
					sb.refresh.section('dashboard', 'db-artefacts');
				}
				// }
			}
		});
	}).on('click', '.sort-item', function (e) {
		var $self = $(e.currentTarget),
		    id = sb.getPageData('project').id;
		new Kenseo.views.Artefacts({
			el: '.artifacts-content',
			id: id,
			colStr: 'Artefacts',
			data: { projects: true, project_id: id, sharePermission: false, sortBy: $self.data('stype') },
			preLoader: function preLoader(response) {
				$('.artifacts-section').html(_.template(templates['artefacts'])(response));
			}
		});
	}).on('click', '.people-remove-icon', function (e) {
		var $self = $(e.currentTarget);
		var userId = $self.attr('data-id');
		var projectId = Kenseo.page.data.project.id;

		sb.renderTemplate({
			url: sb.getRelativePath('removePeople'),
			data: {
				projectId: projectId,
				peopleId: userId
			},
			type: 'GET',
			contentType: false,
			processData: false,
			'callbackfunc': function callbackfunc() {
				popupCloser($self.parents(popupContainer));
			}
		});
	}).on('click', '.dvt-item.comment-summary-icon', function (e) {
		$('.comments-view-holder').toggleClass('active');
	}).on('change', '.filter-checkboxes input[data-all="true"]', function (e) {
		var $self = $(this);
		$self.parents('.filter-checkboxes-content').find('input[type="checkbox"]').not($self).prop('checked', $self.prop('checked'));
	}).on('change', '.filter-checkboxes input[type="checkbox"]:not([data-all="true"])', function (e) {
		var $self = $(this);
		var $allchkBox = $self.parents('.filter-checkboxes-content').find('input[type="checkbox"][data-all="true"]');
		if (!$self.prop('checked')) {
			$allchkBox.prop('checked', false);
		} else {
			var $uncheckedBoxes = $self.parents('.filter-checkboxes-content').find('input[type="checkbox"]:not([data-all="true"])').filter(function () {
				return !$(this).prop('checked');
			});
			if (!$uncheckedBoxes.length) {
				$allchkBox.prop('checked', true);
			}
		}
	});
});

var stickToBottom = function (parent) {
	var bar = parent.querySelector('.bar');
	var top = bar.offsetTop;
	parent.addEventListener('scroll', function (e) {
		var el = e.currentTarget;
		bar.style.bottom = -el.scrollTop + "px";
		bar.style.left = el.scrollLeft + "px";
	});
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL2JhYmVsLWFwcC9jb21tb24vZHluYW1pYy1ldmVudHMuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsQ0FBQyxDQUFDLFlBQVk7QUFDYixLQUFJLGNBQWMsR0FBRyxrQkFBa0I7S0FDbkMsY0FBYyxHQUFHLG1CQUFtQixDQUFDOztBQUV6QyxVQUFTLFdBQVcsQ0FBQyxHQUFHLEVBQUU7QUFDekIsS0FBRyxDQUFDLElBQUksRUFBRSxDQUFDO0FBQ1gsS0FBRyxDQUFDLFFBQVEsRUFBRSxDQUFDLE1BQU0sRUFBRSxDQUFDO0FBQ3hCLElBQUUsQ0FBQyxLQUFLLENBQUMsY0FBYyxFQUFFLENBQUM7RUFDMUI7Ozs7QUFBQSxBQUlELEVBQUMsQ0FBQyxRQUFRLENBQUMsQ0FBQyxFQUFFLENBQUMsT0FBTyxFQUFFLFVBQVUsQ0FBQyxFQUFFO0FBQ3BDLE1BQUksR0FBRyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUM7QUFDdEIsTUFBSSxHQUFHLEdBQUcsR0FBRyxDQUFDLFFBQVEsQ0FBQyxlQUFlLENBQUMsSUFBSSxHQUFHLENBQUMsT0FBTyxDQUFDLGVBQWUsQ0FBQyxDQUFDLE1BQU07Ozs7Ozs7QUFBQyxBQU8vRSxNQUFJLENBQUMsR0FBRyxFQUFFO0FBQ1QsSUFBQyxDQUFDLGVBQWUsQ0FBQyxDQUFDLFdBQVcsQ0FBQyxRQUFRLENBQUMsQ0FBQztHQUN6QztFQUNELENBQUMsQ0FBQyxFQUFFLENBQUMsT0FBTyxFQUFFLGNBQWMsRUFBRSxZQUFZO0FBQzFDLGFBQVcsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsT0FBTyxDQUFDLGNBQWMsQ0FBQyxDQUFDLENBQUM7RUFDN0MsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxPQUFPLEVBQUUsVUFBVSxDQUFDLEVBQUU7QUFDM0IsTUFBSSxPQUFPLEdBQUcsQ0FBQyxDQUFDLEtBQUssSUFBSSxDQUFDLENBQUMsT0FBTyxDQUFDO0FBQ25DLE1BQUksT0FBTyxJQUFJLEVB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LENBQUMsQ0FBQztJQUNqQztHQUNEO0VBQ0QsQ0FBQyxDQUFDO0NBQ0gsQ0FBQyxDQUFDOztBQUdILElBQUksYUFBYSxHQUFHLFVBQVUsTUFBTSxFQUFFO0FBQ2xDLEtBQUksR0FBRyxHQUFHLE1BQU0sQ0FBQyxhQUFhLENBQUMsTUFBTSxDQUFDLENBQUM7QUFDdkMsS0FBSSxHQUFHLEdBQUcsR0FBRyxDQUFDLFNBQVMsQ0FBQztBQUN4QixPQUFNLENBQUMsZ0JBQWdCLENBQUMsUUFBUSxFQUFFLFVBQVUsQ0FBQyxFQUFFO0FBQzNDLE1BQUksRUFBRSxHQUFHLENBQUMsQ0FBQyxhQUFhLENBQUM7QUFDekIsS0FBRyxDQUFDLEtBQUssQ0FBQyxNQUFNLEdBQUcsQ0FBQyxFQUFFLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQztBQUN4QyxLQUFHLENBQUMsS0FBSyxDQUFDLElBQUksR0FBRyxFQUFFLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQztFQUN6QyxDQUFDLENBQUM7Q0FDTixDQUFBIiwiZmlsZSI6ImR5bmFtaWMtZXZlbnRzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJChmdW5jdGlvbiAoKSB7XG5cdHZhciBwb3B1cENvbnRhaW5lciA9ICcucG9wdXAtY29udGFpbmVyJyxcblx0ICAgIGNsb3NlUG9wdXBJY29uID0gJy5wb3B1cC1jbG9zZS1pY29uJztcblxuXHRmdW5jdGlvbiBwb3B1cENsb3NlcigkZWwpIHtcblx0XHQkZWwuaGlkZSgpO1xuXHRcdCRlbC5jaGlsZHJlbigpLnJlbW92ZSgpO1xuXHRcdHNiLnBvcHVwLnJlc2V0UG9wdXBEYXRhKCk7XG5cdH1cblxuXHQvLyBFdmVudHNcblxuXHQkKGRvY3VtZW50KS5vbignY2xpY2snLCBmdW5jdGlvbiAoZSkge1xuXHRcdHZhciAkZWwgPSAkKGUudGFyZ2V0KTtcblx0XHR2YXIgYmxuID0gJGVsLmhhc0NsYXNzKCcudG9nZ2xlLWNsaWNrJykgfHwgJGVsLnBhcmVudHMoJy50b2dnbGUtY2xpY2snKS5sZW5ndGg7XG5cdFx0Ly8gdmFyIGJsbiA9IFx0JGVsLmhhc0NsYXNzKCdwb3B1cC1jbGljaycpXG5cdFx0Ly8gXHRcdFx0fHwgJGVsLmhhc0NsYXNzKCdwYWdlLWNsaWNrJylcblx0XHQvLyBcdFx0XHR8fCAkZWwuaGFzQ2xhc3MoJ3RvZ2dsZS1jbGljaycpXG5cdFx0Ly8gXHRcdFx0fHwgJGVsLnBhcmVudHMoJy5wb3B1cC1jbGljaycpLmxlbmd0aFxuXHRcdC8vIFx0XHRcdHx8ICRlbC5wYXJlbnRzKCdwYWdlLWNsaWNrJykubGVuZ3RoXG5cdFx0Ly8gXHRcdFx0fHwgJGVsLnBhcmVudHMoJy50b2dnbGUtY2xpY2snKS5sZW5ndGg7XG5cdFx0aWYgKCFibG4pIHtcblx0XHRcdCQoJy50b2dnbGUtY2xpY2snKS5yZW1vdmVDbGFzcygnYWN0aXZlJyk7XG5cdFx0fVxuXHR9KS5vbignY2xpY2snLCBjbG9zZVBvcHVwSWNvbiwgZnVuY3Rpb24gKCkge1xuXHRcdHBvcHVwQ2xvc2VyKCQodGhpcykucGFyZW50cyhwb3B1cENvbnRhaW5lcikpO1xuXHR9KS5vbigna2V5dXAnLCBmdW5jdGlvbiAoZSkge1xuXHRcdHZhciBrZXljb2RlID0gZS53aGljaCB8fCBlLmtleUNvZGU7XG5cdFx0aWYgKGtleWNvZGUgPT0gMjcpIHtcblx0XHRcdHBvcHVwQ2xvc2VyKCQocG9wdXBDb250YWluZXIpKTtcblx0XHR9XG5cdH0pLm9uKCdjbGljaycsIHBvcHVwQ29udGFpbmVyLCBmdW5jdGlvbiAoZSkge1xuXHRcdGlmICgkKGUudGFyZ2V0KSA9PT0gJChwb3B1cENvbnRhaW5lcikpIHtcblx0XHRcdCQocG9wdXBDb250YWluZXIpWzBdLnJlbW92ZUNoaWxkKCQocG9wdXBDb250YWluZXIpLmNoaWxkcmVuKClbMF0pO1xuXHRcdH1cblx0fSkub24oJ2NsaWNrJywgcG9wdXBDb250YWluZXIgKyAnIC5jYW5jZWwtYnRuJywgZnVuY3Rpb24gKGUpIHtcblx0XHRlLnByZXZlbnREZWZhdWx0KCk7XG5cdFx0cG9wdXBDbG9zZXIoJCh0aGlzKS5wYXJlbnRzKHBvcHVwQ29udGFpbmVyKSk7XG5cdH0pLm9uKCdjbGljaycsICcubmF2LWJ0bicsIGZ1bmN0aW9uIChlKSB7XG5cdFx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xuXG5cdFx0c2IucmVnaXN0ZXJEYXRhKCk7XG5cdFx0dmFyICRkYXRhVXJsID0gJCh0aGlzKS5kYXRhKCdpbmRleCcpO1xuXHRcdGlmICgkZGF0YVVybCA+PSAwKSB7XG5cdFx0XHRzYi5jYWxsUG9wdXAoJGRhdGFVcmwpO1xuXHRcdH1cblx0fSkub24oJ2NsaWNrJywgJy50b2dnbGUtY2xpY2snLCBmdW5jdGlvbiAoZSkge1xuXHRcdC8vIGUuc3RvcFByb3BhZ2F0aW9uKCk7XG5cdFx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xuXHRcdGlmICgkKGUudGFyZ2V0KS5oYXNDbGFzcygnYWN0aXZlJykgfHwgJChlLnRhcmdldCkucGFyZW50cygnLmFjdGl2ZScpLmxlbmd0aCkge1xuXHRcdFx0aWYgKCQoZS50YXJnZXQpLmhhc0NsYXNzKCdhbnRpLXRvZ2dsZS1jbGljaycpIHx8ICQoZS50YXJnZXQpLnBhcmVudHMoJy5hbnRpLXRvZ2dsZS1jbGljaycpLmxlbmd0aCkge1xuXHRcdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0XHR9XG5cdFx0fVxuXHRcdHZhciAkdGhpcyA9ICQodGhpcyk7XG5cdFx0JCgnLmFjdGl2ZScpLm5vdCgkdGhpcykucmVtb3ZlQ2xhc3MoJ2FjdGl2ZScpO1xuXHRcdCR0aGlzLnRvZ2dsZUNsYXNzKCdhY3RpdmUnKTtcblx0fSkub24oJ2NsaWNrJywgJy5wb3B1cC1jbGljaycsIGZ1bmN0aW9uICgpIHtcblx0XHR2YXIgJHNlbGYgPSAkKHRoaXMpO1xuXHRcdHZhciAkZGF0YUhvbGRlciA9ICRzZWxmLnBhcmVudHMoJy5kYXRhLWhvbGRlcicpO1xuXHRcdGlmKCRkYXRhSG9sZGVyLmxlbmd0aCl7XG5cdFx0XHRzYi5pbnNlcnRQb3B1cERhdGEoJGRhdGFIb2xkZXIpO1xuXHRcdH1cblx0XHRlbHNlIGlmKCRzZWxmLmhhc0NsYXNzKCdkYXRhLWhvbGRlcicpKXtcblx0XHRcdHNiLmluc2VydFBvcHVwRGF0YSgkc2VsZik7XG5cdFx0fVxuXHRcdGVsc2V7XG5cdFx0XHRzYi5sb2coXCJEaWRuJ3QgcHJvdmlkZSBkYXRhLWhvbGRlciBjbGFzcyB0byB0aGUgZWxlbWVudCBvciBpdHMgcGFyZW50XCIpO1xuXHRcdH1cblxuXHRcdC8vIHZhciBrZXkgPSAkKHRoaXMpLmRhdGEoJ2tleScpO1xuXHRcdC8vIHZhciBpZCA9ICQodGhpcykuZGF0YSgnaWQnKTtcblx0XHQvLyBpZihrZXkgJiYgaWQpe1xuXHRcdC8vIFx0S2Vuc2VvLnBvcHVwLmRhdGEgPSBLZW5zZW8uZGF0YVtrZXldW2lkXTtcblx0XHQvLyB9XG5cblxuXHRcdHNiLm5hdmlnYXRlKCdwb3B1cCcsIHRoaXMpO1xuXHR9KS5vbignY2xpY2snLCAnLm92ZXJsYXktY2xpY2snLCBmdW5jdGlvbiAoKSB7XG5cdFx0c2IubmF2aWdhdGUoJ292ZXJsYXknLCB0aGlzKTtcblx0fSkub24oJ2NsaWNrJywgJy5wYWdlLWNsaWNrJywgZnVuY3Rpb24gKGUpIHtcblx0XHQvLyBUbyBhdm9pZCBkZWZhdWx0IGJlaGF2aW91ciBvZiB0aGUgYW5jaG9yIGVsZW1lbnRcblx0XHRlLnByZXZlbnREZWZhdWx0KCk7XG5cdFx0Ly8gRG9uJ3QgY2FsbCBvdGhlciBmdW5jdGlvbnMgYXR0YWNoZWQgdG8gdGhlIHNhbWUgZXZlbnQuXG5cdFx0ZS5zdG9wUHJvcGFnYXRpb24oKTtcblx0XHQvLyBEZWZhdWx0IGFwcGxpY2F0aW9uIG9wZXJhdGlvbnNcblx0XHRzYi5uYXZpZ2F0ZSgncGFnZScsIHRoaXMpO1xuXG5cdFx0Ly8gaWYgdGhlIGxpbmsgaXMgaW4gYSBzdWIgbWVudSBzZWN0aW9uLCBoaWRlIHRoYXQgc2VjdGlvblxuXHRcdCQodGhpcykucGFyZW50cygnLnRvZ2dsZS1jbGljaycpLnJlbW92ZUNsYXNzKCdhY3RpdmUnKTtcblxuXHRcdC8vIGlmIHRoZSBsaW5rIGlzIGluIGEgcG9wdXAsIGNsb3NlIHRoYXQgcG9wdXBcblx0XHRwb3B1cENsb3NlcigkKHBvcHVwQ29udGFpbmVyKSk7XG5cblx0XHQvLyBpZiB0aGUgbGluayBpcyBhbiBhbmNob3IgZWxlbWVudCwgcmVkaXJlY3QgaXQuXG5cdFx0Ly8gUmVmZXI6IGh0dHA6Ly9zdGFja292ZXJmbG93LmNvbS9hLzMxMTc3NTQwLzE1NzczOTZcblx0XHRpZih0aGlzLnRhZ05hbWUudG9Mb3dlckNhc2UoKSA9PT0gXCJhXCIpe1xuXHRcdFx0d2luZG93LmxvY2F0aW9uLmhyZWYgPSBET01BSU5fVUlfVVJMICsgJCh0aGlzKS5hdHRyKCdocmVmJyk7XG5cdFx0fVxuXHR9KS5vbignY2xpY2snLCAnLnNoYXJlLWJ0bicsIGZ1bmN0aW9uICgpIHtcblx0XHR2YXIgY29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLnNoYXJlLWFydGVmYWN0LXBlb3BsZS1pdGVtJyk7XG5cdFx0dmFyIHNoYXJlZERldGFpbHMgPSBbXTtcblx0XHRmb3IgKHZhciBpID0gMDsgaSA8IGNvbnRhaW5lci5sZW5ndGg7IGkrKykge1xuXHRcdFx0dmFyICRlbGVtID0gJChjb250YWluZXJbaV0pO1xuXHRcdFx0dmFyIHVzZXJJZCA9ICRlbGVtLmF0dHIoJ2RhdGEtaWQnKTtcblx0XHRcdHZhciBwZXJtaXNzaW9ucyA9ICRlbGVtLmZpbmQoJy51c2VyLXBlcm1pc3Npb24nKTtcblx0XHRcdGZvciAodmFyIGogPSAwOyBqIDwgcGVybWlzc2lvbnMubGVuZ3RoOyBqKyspIHtcblx0XHRcdFx0dmFyICRwZXJtaXNzaW9uID0gJChwZXJtaXNzaW9uc1tqXSk7XG5cdFx0XHRcdGlmICgkcGVybWlzc2lvblswXS5jaGVja2VkID09IHRydWUpIHtcblx0XHRcdFx0XHR2YXIgcGVybWlzc2lvblR5cGUgPSAkKCRwZXJtaXNzaW9uWzBdKS5hdHRyKCdkYXRhLWVsZW0nKSA9PSAnY29tbWVudCcgPyAnYycgOiAncyc7XG5cdFx0XHRcdFx0c2hhcmVkRGV0YWlscy5wdXNoKHtcblx0XHRcdFx0XHRcdCd1c2VySWQnOiB1c2VySWQsXG5cdFx0XHRcdFx0XHQncGVybWlzc2lvbic6IHBlcm1pc3Npb25UeXBlXG5cdFx0XHRcdFx0fSk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdFx0Ly8gc2Iuc2V0UG9wdXBEYXRhKEpTT04uc3RyaW5naWZ5KHNoYXJlZERldGFpbHMpLCAnc2hhcmVkVG8nKVxuXHRcdGNvbnNvbGUubG9nKCdwYXJzaW5nIGlzIGNvbXBsZXRlZCcpO1xuXHR9KS5vbignY2xpY2snLCAnLmRvbmUtYnRuJywgZnVuY3Rpb24gKCkge1xuXHRcdHNiLnJlZ2lzdGVyRGF0YSgpO1xuXHRcdHZhciAkc2VsZiA9ICQodGhpcyk7XG5cdFx0dmFyIGFjdGlvblR5cGUgPSBzYi5nZXRQb3B1cERhdGEoJ2FjdGlvblR5cGUnKTtcblx0XHR2YXIgZGF0YSA9IG51bGw7XG5cdFx0dmFyIGZpbGUgPSBzYi5nZXRQb3B1cERhdGEoJ2ZpbGUnKTtcblx0XHR2YXIgcGxhaW5EYXRhID0gZmFsc2UsXG5cdFx0ICAgIGNvbnRlbnRUeXBlID0gbnVsbCxcblx0XHQgICAgcHJvY2Vzc0RhdGEgPSBudWxsO1xuXG5cdCAgICB2YXIgdXJsID0gXCJcIjtcblxuXHRcdGlmIChmaWxlKSB7XG5cdFx0XHR2YXIgZGF0YSA9IG5ldyBGb3JtRGF0YSgpO1xuXG5cdFx0XHRmb3IgKHggaW4gS2Vuc2VvLnBvcHVwLmRhdGEpIHtcblx0XHRcdFx0dmFyIGR1bXAgPSBzYi5nZXRQb3B1cERhdGEoeCk7XG5cdFx0XHRcdGlmICh0eXBlb2YgZHVtcCA9PT0gJ29iamVjdCcgJiYgeCAhPT0gJ2ZpbGUnKSB7XG5cdFx0XHRcdFx0ZHVtcCA9IEpTT04uc3RyaW5naWZ5KGR1bXApO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGRhdGEuYXBwZW5kKHgsIGR1bXApO1xuXHRcdFx0fVxuXG5cdFx0XHRkYXRhLmFwcGVuZCgndHlwZScsICdJJyk7XG5cdFx0XHRkYXRhLmFwcGVuZCgnc2lkJywgS2Vuc2VvLmNvb2tpZS5zZXNzaW9uaWQoKSk7XG5cdFx0XHR0eXBlID0gJ1BPU1QnO1xuXHRcdFx0dXJsID0gc2IuZ2V0UmVsYXRpdmVQYXRoKCdleHRVcGxvYWQucGhwJyk7XG5cdFx0XHRwbGFpbkRhdGEgPSB0cnVlO1xuXHRcdFx0Y29udGVudFR5cGUgPSBmYWxzZTtcblx0XHRcdHByb2Nlc3NEYXRhID0gZmFsc2U7XG5cdFx0fSBlbHNlIHtcblx0XHRcdGRhdGEgPSBzYi5nZXRQb3B1cERhdGEoKTtcblx0XHRcdHVybCA9IHNiLmdldFJlbGF0aXZlUGF0aChhY3Rpb25UeXBlKTtcblx0XHRcdHR5cGUgPSAnR0VUJztcblx0XHR9XG5cblx0XHRzYi5hamF4Q2FsbCh7XG5cdFx0XHR1cmw6IHVybCxcblx0XHRcdGRhdGE6IGRhdGEsXG5cdFx0XHR0eXBlOiB0eXBlLFxuXHRcdFx0cGxhaW5EYXRhOiBwbGFpbkRhdGEsXG5cdFx0XHRjb250ZW50VHlwZTogY29udGVudFR5cGUsXG5cdFx0XHRwcm9jZXNzRGF0YTogcHJvY2Vzc0RhdGEsXG5cdFx0XHRzdWNjZXNzOiBmdW5jdGlvbiBzdWNjZXNzKCkge1xuXHRcdFx0XHRwb3B1cENsb3Nlcigkc2VsZi5wYXJlbnRzKHBvcHVwQ29udGFpbmVyKSk7XG5cdFx0XHRcdC8vIGlmIChLZW5zZW8uY3VycmVudE1vZGVsKSB7XG5cdFx0XHRcdFx0aWYgKGFjdGlvblR5cGUgPT09ICdhcmNoaXZlUHJvamVjdCcpIHtcblx0XHRcdFx0XHRcdC8vIGNvbnNvbGUuZGlyKEtlbnNlby5jdXJyZW50TW9kZWwpO1xuXHRcdFx0XHRcdFx0Ly8gY29uc29sZS5kaXIoS2Vuc2VvLmN1cnJlbnRNb2RlbC5jb2xsZWN0aW9uKTtcblx0XHRcdFx0XHRcdC8vIEtlbnNlby5jdXJyZW50TW9kZWwuY29sbGVjdGlvbi5yZW1vdmUoS2Vuc2VvLmN1cnJlbnRNb2RlbCk7XG5cdFx0XHRcdFx0XHRzYi5yZWZyZXNoLnNlY3Rpb24oJ2Rhc2hib2FyZCcsICdkYi1wcm9qZWN0cycpO1xuXHRcdFx0XHRcdH0gZWxzZSBpZiAoYWN0aW9uVHlwZSA9PT0gJ2FyY2hpdmVBcnRlZmFjdCcpIHtcblx0XHRcdFx0XHRcdEtlbnNlby5jdXJyZW50TW9kZWwuY29sbGVjdGlvbi5yZW1vdmUoS2Vuc2VvLmN1cnJlbnRNb2RlbCk7XG5cdFx0XHRcdFx0fSBlbHNlIGlmIChhY3Rpb25UeXBlID09PSAnZGVsZXRlQXJ0ZWZhY3QnKSB7XG5cdFx0XHRcdFx0XHRLZW5zZW8uY3VycmVudE1vZGVsLmNvbGxlY3Rpb24ucmVtb3ZlKEtlbnNlby5jdXJyZW50TW9kZWwpO1xuXHRcdFx0XHRcdH0gZWxzZSBpZiAoYWN0aW9uVHlwZSA9PT0gJ2FkZFByb2plY3QnKSB7XG5cdFx0XHRcdFx0XHQvLyBBZGQgdGhlIHByb2plY3QgdG8gdGhlIERhc2hib2FyZCBzZWN0aW9uXG5cdFx0XHRcdFx0XHQvLyB2YXIgJHByb2plY3RTZWN0aW9uQ29udGVudCA9ICQoJy5wcm9qZWN0cy1zZWN0aW9uLWNvbnRlbnQnKTtcblx0XHRcdFx0XHRcdC8vICRwcm9qZWN0U2VjdGlvbkNvbnRlbnQuZmluZCgnLm5vLWl0ZW1zJykuaGlkZSgpO1xuXHRcdFx0XHRcdFx0Ly8gaWYoJHByb2plY3RTZWN0aW9uQ29udGVudC5sZW5ndGgpe1xuXHRcdFx0XHRcdFx0Ly8gXHR2YXIgcHJvamVjdFZpZXcgPSBuZXcgS2Vuc2VvLnZpZXdzLlByb2plY3QoKTtcblx0XHRcdFx0XHRcdC8vIFx0JHByb2plY3RTZWN0aW9uQ29udGVudC5hcHBlbmQocHJvamVjdFZpZXcucmVuZGVyKFxuXHRcdFx0XHRcdFx0Ly8gXHRcdHsgXG5cdFx0XHRcdFx0XHQvLyBcdFx0XHRuYW1lOiBkYXRhLnByb2plY3ROYW1lLnZhbHVlLFxuXHRcdFx0XHRcdFx0Ly8gXHRcdFx0bGFzdF91cGRhdGVkX2RhdGU6IG5ldyBEYXRlKCkudG9TdHJpbmcoKSxcblx0XHRcdFx0XHRcdC8vIFx0XHRcdGlkOiAneDMnXG5cdFx0XHRcdFx0XHQvLyBcdFx0fVxuXHRcdFx0XHRcdFx0Ly8gXHQpLiRlbCk7XG5cdFx0XHRcdFx0XHQvLyB9XG5cdFx0XHRcdFx0XHRzYi5yZWZyZXNoLnNlY3Rpb24oJ2Rhc2hib2FyZCcsICdkYi1wcm9qZWN0cycpO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRlbHNlIGlmKGFjdGlvblR5cGUgPT09ICdhZGRBcnRlZmFjdCcpe1xuXHRcdFx0XHRcdFx0c2IucmVmcmVzaC5zZWN0aW9uKCdkYXNoYm9hcmQnLCAnZGItYXJ0ZWZhY3RzJyk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHQvLyB9XG5cdFx0XHR9XG5cdFx0fSk7XG5cdH0pLm9uKCdjbGljaycsICcuc29ydC1pdGVtJywgZnVuY3Rpb24gKGUpIHtcblx0XHR2YXIgJHNlbGYgPSAkKGUuY3VycmVudFRhcmdldCksXG5cdFx0ICAgIGlkID0gc2IuZ2V0UGFnZURhdGEoJ3Byb2plY3QnKS5pZDtcblx0XHRuZXcgS2Vuc2VvLnZpZXdzLkFydGVmYWN0cyh7XG5cdFx0XHRlbDogJy5hcnRpZmFjdHMtY29udGVudCcsXG5cdFx0XHRpZDogaWQsXG5cdFx0XHRjb2xTdHI6ICdBcnRlZmFjdHMnLFxuXHRcdFx0ZGF0YTogeyBwcm9qZWN0czogdHJ1ZSwgcHJvamVjdF9pZDogaWQsIHNoYXJlUGVybWlzc2lvbjogZmFsc2UsIHNvcnRCeTogJHNlbGYuZGF0YSgnc3R5cGUnKSB9LFxuXHRcdFx0cHJlTG9hZGVyOiBmdW5jdGlvbiBwcmVMb2FkZXIocmVzcG9uc2UpIHtcblx0XHRcdFx0JCgnLmFydGlmYWN0cy1zZWN0aW9uJykuaHRtbChfLnRlbXBsYXRlKHRlbXBsYXRlc1snYXJ0ZWZhY3RzJ10pKHJlc3BvbnNlKSk7XG5cdFx0XHR9XG5cdFx0fSk7XG5cdH0pLm9uKCdjbGljaycsICcucGVvcGxlLXJlbW92ZS1pY29uJywgZnVuY3Rpb24gKGUpIHtcblx0XHR2YXIgJHNlbGYgPSAkKGUuY3VycmVudFRhcmdldCk7XG5cdFx0dmFyIHVzZXJJZCA9ICRzZWxmLmF0dHIoJ2RhdGEtaWQnKTtcblx0XHR2YXIgcHJvamVjdElkID0gS2Vuc2VvLnBhZ2UuZGF0YS5wcm9qZWN0LmlkO1xuXG5cdFx0c2IucmVuZGVyVGVtcGxhdGUoe1xuXHRcdFx0dXJsOiBzYi5nZXRSZWxhdGl2ZVBhdGgoJ3JlbW92ZVBlb3BsZScpLFxuXHRcdFx0ZGF0YToge1xuXHRcdFx0XHRwcm9qZWN0SWQ6IHByb2plY3RJZCxcblx0XHRcdFx0cGVvcGxlSWQ6IHVzZXJJZFxuXHRcdFx0fSxcblx0XHRcdHR5cGU6ICdHRVQnLFxuXHRcdFx0Y29udGVudFR5cGU6IGZhbHNlLFxuXHRcdFx0cHJvY2Vzc0RhdGE6IGZhbHNlLFxuXHRcdFx0J2NhbGxiYWNrZnVuYyc6IGZ1bmN0aW9uIGNhbGxiYWNrZnVuYygpIHtcblx0XHRcdFx0cG9wdXBDbG9zZXIoJHNlbGYucGFyZW50cyhwb3B1cENvbnRhaW5lcikpO1xuXHRcdFx0fVxuXHRcdH0pO1xuXHR9KS5vbignY2xpY2snLCAnLmR2dC1pdGVtLmNvbW1lbnQtc3VtbWFyeS1pY29uJywgZnVuY3Rpb24oZSl7XG5cdFx0JCgnLmNvbW1lbnRzLXZpZXctaG9sZGVyJykudG9nZ2xlQ2xhc3MoJ2FjdGl2ZScpO1xuXHR9KVxuXHQub24oJ2NoYW5nZScsICcuZmlsdGVyLWNoZWNrYm94ZXMgaW5wdXRbZGF0YS1hbGw9XCJ0cnVlXCJdJywgZnVuY3Rpb24oZSl7XG5cdFx0dmFyICRzZWxmID0gJCh0aGlzKTtcblx0XHQkc2VsZi5wYXJlbnRzKCcuZmlsdGVyLWNoZWNrYm94ZXMtY29udGVudCcpLmZpbmQoJ2lucHV0W3R5cGU9XCJjaGVja2JveFwiXScpLm5vdCgkc2VsZikucHJvcCgnY2hlY2tlZCcsICRzZWxmLnByb3AoJ2NoZWNrZWQnKSk7XG5cdH0pXG5cdC5vbignY2hhbmdlJywgJy5maWx0ZXItY2hlY2tib3hlcyBpbnB1dFt0eXBlPVwiY2hlY2tib3hcIl06bm90KFtkYXRhLWFsbD1cInRydWVcIl0pJywgZnVuY3Rpb24oZSl7XG5cdFx0dmFyICRzZWxmID0gJCh0aGlzKTtcblx0XHR2YXIgJGFsbGNoa0JveCA9ICRzZWxmLnBhcmVudHMoJy5maWx0ZXItY2hlY2tib3hlcy1jb250ZW50JykuZmluZCgnaW5wdXRbdHlwZT1cImNoZWNrYm94XCJdW2RhdGEtYWxsPVwidHJ1ZVwiXScpO1xuXHRcdGlmKCEkc2VsZi5wcm9wKCdjaGVja2VkJykpe1xuXHRcdFx0JGFsbGNoa0JveC5wcm9wKCdjaGVja2VkJywgZmFsc2UpO1xuXHRcdH1cblx0XHRlbHNle1xuXHRcdFx0dmFyICR1bmNoZWNrZWRCb3hlcyA9ICRzZWxmLnBhcmVudHMoJy5maWx0ZXItY2hlY2tib3hlcy1jb250ZW50JykuZmluZCgnaW5wdXRbdHlwZT1cImNoZWNrYm94XCJdOm5vdChbZGF0YS1hbGw9XCJ0cnVlXCJdKScpLmZpbHRlcihmdW5jdGlvbigpe1xuXHRcdFx0XHRyZXR1cm4gISQodGhpcykucHJvcCgnY2hlY2tlZCcpO1xuXHRcdFx0fSk7XG5cdFx0XHRpZighJHVuY2hlY2tlZEJveGVzLmxlbmd0aCl7XG5cdFx0XHRcdCRhbGxjaGtCb3gucHJvcCgnY2hlY2tlZCcsIHRydWUpO1xuXHRcdFx0fVxuXHRcdH1cblx0fSk7XG59KTtcblxuXG52YXIgc3RpY2tUb0JvdHRvbSA9IGZ1bmN0aW9uIChwYXJlbnQpIHtcbiAgICB2YXIgYmFyID0gcGFyZW50LnF1ZXJ5U2VsZWN0b3IoJy5iYXInKTtcbiAgICB2YXIgdG9wID0gYmFyLm9mZnNldFRvcDtcbiAgICBwYXJlbnQuYWRkRXZlbnRMaXN0ZW5lcignc2Nyb2xsJywgZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgdmFyIGVsID0gZS5jdXJyZW50VGFyZ2V0O1xuICAgICAgICBiYXIuc3R5bGUuYm90dG9tID0gLWVsLnNjcm9sbFRvcCArIFwicHhcIjtcbiAgICAgICAgYmFyLnN0eWxlLmxlZnQgPSBlbC5zY3JvbGxMZWZ0ICsgXCJweFwiO1xuICAgIH0pO1xufSJdfQ==
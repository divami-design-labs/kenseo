{"version":3,"sources":["config/sandbox.postcall.js"],"names":[],"mappings":"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","file":"config/sandbox.postcall.js","sourcesContent":["/*\n * Main aim of this library is to send all the necessary data to server\n */\nsb.postcall = (function(){\n\tvar accessType = Kenseo.settings.accesstype;\n\tvar fieldTypes = {\n\t\t'text-with-comma': function($el){\n\t\t\treturn $el.val().split(',');\n\t\t},\n\t\t'access_type': function($el){\n\t\t\tvar $checkboxes = $el.find('input[type=\"checkbox\"]');\n\t\t\tvar str = \"\";\n\t\t\tfor(var i = 0, len = $checkboxes.length; i < len; i++){\n\t\t\t\tvar checkbox = $checkboxes[i];\n\t\t\t\t// Converting boolean to 0 and 1\n\t\t\t\tstr += checkbox.checked * 1;\n\t\t\t}\n\t\t\treturn accessType[str];\n\t\t},\n\t\t'text': function($el){\n\t\t\treturn $el.val();\n\t\t},\n\t\t'share-permissions': function($el) {\n\t\t\tvar $items = $el.find('.share-artefact-people-item');\n\t\t\tvar shared_members = []; // taking an empty object\n\t\t\tfor(var i = 0, len = $items.length; i < len; i++){\n\t\t\t\tvar $item = $($items.get(i));\n\t\t\t\tvar $commentChk = $item.find('.add-comments-chk input');\n\t\t\t\tvar $shareChk = $item.find('.others-chk input');\n\t\t\t\tif($commentChk.length && $shareChk.length){\n\t\t\t\t\tvar str = $commentChk.get(0).checked * 1 + \"\" + $shareChk.get(0).checked * 1;\n\t\t\t\t\tshared_members.push({\n\t\t\t\t\t\t'user_id': $item.attr('data-k-user_id'),\n\t\t\t\t\t\t'access_type': accessType[str]\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tshared_members.push({\n\t\t\t\t\t\t'user_id': $item.attr('data-k-user_id'),\n\t\t\t\t\t\t'access_type': $item.attr('data-access_type')\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn shared_members;\n\t\t}\n\t}\n\treturn {\n\t\tgetPostObj: function($el){\n\t\t\tvar $el = $($el); // making sure the passed object is jquery object\n\t\t\tvar targetElementString = $el.attr('data-target-k-form'); // getting the target element's selector string\n\t\t\t// Initiating a data object to store the values retrieved from the fields\n\t\t\tvar data = {};\n\t\t\t// Get the target element in which the field type values are need to be passed to server\n\t\t\t// The target element must be parent of the provided $el element\n\t\t\t// Default targetElementString is assumed to be  \".k-form\"\n\t\t\tvar $targetElement = $el.parents(targetElementString || '.k-form'); \n\t\t\t// Get all the fields whose values are need to be passed to the server\n\t\t\tvar $fields = $targetElement.find('.k-field');\n\t\t\tfor(var i = 0, len = $fields.length; i < len; i++){\n\t\t\t\tvar $field = $($fields[i]);\n\t\t\t\t// Get the type of functionality/implementation to be done to fetch the attached data\n\t\t\t\tvar type = $field.attr('data-xtype');\n\t\t\t\tvar typeKey = $field.attr('data-xtype-key') || type; // Applying provided xtype as key when no key is provided\n\t\t\t\tvar func = fieldTypes[type];\n\t\t\t\tif(func){ // if k-xtype field's functionality is present in fieldTypes variable above\n\t\t\t\t\t// data[typeKey] = func($field);\n\t\t\t\t\tKenseo.popup.data[typeKey] = func($field); // temporary fix\n\t\t\t\t}\n\n\t\t\t\t// Checking for \"data-k-\" prefix attributes in k-field element\n\t\t\t\tsb.loopAttributes($field.get(0), 'data-k-', function(key, value){\n\t\t\t\t\t// Store in the data variable\n\t\t\t\t\t// data[key.substr(7)] = value;\n\t\t\t\t\tKenseo.popup.data[key] = value; // temporary fix\n\t\t\t\t});\n\t\t\t}\n\n\n\t\t\t// return the filled data\n\t\t\treturn data;\n\t\t}\n\t}\n})()"],"sourceRoot":"/source/"}
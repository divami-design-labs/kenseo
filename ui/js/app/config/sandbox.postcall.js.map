{"version":3,"sources":["config/sandbox.postcall.js"],"names":[],"mappings":";;;;;AAGA,EAAE,CAAC,QAAQ,GAAG,CAAC,YAAU;AACxB,KAAI,UAAU,GAAG,MAAM,CAAC,QAAQ,CAAC,UAAU,CAAC;AAC5C,KAAI,UAAU,GAAG;AAChB,mBAAiB,EAAE,uBAAS,GAAG,EAAC;AAC/B,UAAO,GAAG,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;GAC5B;AACD,eAAa,EAAE,qBAAS,GAAG,EAAC;AAC3B,OAAI,WAAW,GAAG,GAAG,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC;AACrD,OAAI,GAAG,GAAG,EAAE,CAAC;AACb,QAAI,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAC;AACrD,QAAI,QAAQ,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;;AAE9B,OAAG,IAAI,QAAQ,CAAC,OAAO,GAAG,CAAC,CAAC;IAC5B;AACD,UAAO,UAAU,CAAC,GAAG,CAAC,CAAC;GACvB;AACD,QAAM,EAAE,cAAS,GAAG,EAAC;AACpB,UAAO,GAAG,CAAC,GAAG,EAAE,CAAC;GACjB;EACD,CAAA;AACD,QAAO;AACN,YAAU,EAAE,oBAAS,GAAG,EAAC;AACxB,OAAI,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AACjB,OAAI,mBAAmB,GAAG,GAAG,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;;AAEzD,OAAI,IAAI,GAAG,EAAE,CAAC;;;;AAId,OAAI,cAAc,GAAG,GAAG,CAAC,OAAO,CAAC,mBAAmB,IAAI,SAAS,CAAC,CAAC;;AAEnE,OAAI,OAAO,GAAG,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AAC9C,QAAI,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAC;AACjD,QAAI,MAAM,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;;AAE3B,QAAI,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;AACrC,QAAI,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,IAAI,CAAC;AACpD,QAAI,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC;AAC5B,QAAG,IAAI,EAAC;;;AAEP,WAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;KAC1C;;;AAGD,MAAE,CAAC,cAAc,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,SAAS,EAAE,UAAS,GAAG,EAAE,KAAK,EAAC;;;AAG/D,WAAM,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;KACzC,CAAC,CAAC;IACH;;;AAID,UAAO,IAAI,CAAC;GACZ;EACD,CAAA;CACD,CAAA,EAAG,CAAA","file":"config/sandbox.postcall.js","sourcesContent":["/*\r\n * Main aim of this library is to send all the necessary data to server\r\n */\r\nsb.postcall = (function(){\r\n\tvar accessType = Kenseo.settings.accessType;\r\n\tvar fieldTypes = {\r\n\t\t'text-with-comma': function($el){\r\n\t\t\treturn $el.val().split(',');\r\n\t\t},\r\n\t\t'access_type': function($el){\r\n\t\t\tvar $checkboxes = $el.find('input[type=\"checkbox\"]');\r\n\t\t\tvar str = \"\";\r\n\t\t\tfor(var i = 0, len = $checkboxes.length; i < len; i++){\r\n\t\t\t\tvar checkbox = $checkboxes[i];\r\n\t\t\t\t// Converting boolean to 0 and 1\r\n\t\t\t\tstr += checkbox.checked * 1;\r\n\t\t\t}\r\n\t\t\treturn accessType[str];\r\n\t\t},\r\n\t\t'text': function($el){\r\n\t\t\treturn $el.val();\r\n\t\t}\r\n\t}\r\n\treturn {\r\n\t\tgetPostObj: function($el){\r\n\t\t\tvar $el = $($el); // making sure the passed object is jquery object\r\n\t\t\tvar targetElementString = $el.attr('data-target-k-form'); // getting the target element's selector string\r\n\t\t\t// Initiating a data object to store the values retrieved from the fields\r\n\t\t\tvar data = {};\r\n\t\t\t// Get the target element in which the field type values are need to be passed to server\r\n\t\t\t// The target element must be parent of the provided $el element\r\n\t\t\t// Default targetElementString is assumed to be  \".k-form\"\r\n\t\t\tvar $targetElement = $el.parents(targetElementString || '.k-form'); \r\n\t\t\t// Get all the fields whose values are need to be passed to the server\r\n\t\t\tvar $fields = $targetElement.find('.k-field');\r\n\t\t\tfor(var i = 0, len = $fields.length; i < len; i++){\r\n\t\t\t\tvar $field = $($fields[i]);\r\n\t\t\t\t// Get the type of functionality/implementation to be done to fetch the attached data\r\n\t\t\t\tvar type = $field.attr('data-xtype');\r\n\t\t\t\tvar typeKey = $field.attr('data-xtype-key') || type; // Applying provided xtype as key when no key is provided\r\n\t\t\t\tvar func = fieldTypes[type];\r\n\t\t\t\tif(func){ // if k-xtype field's functionality is present in fieldTypes variable above\r\n\t\t\t\t\t// data[typeKey] = func($field);\r\n\t\t\t\t\tKenseo.popup.data[typeKey] = func($field); // temporary fix\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Checking for \"data-k-\" prefix attributes in k-field element\r\n\t\t\t\tsb.loopAttributes($field.get(0), 'data-k-', function(key, value){\r\n\t\t\t\t\t// Store in the data variable\r\n\t\t\t\t\t// data[key.substr(7)] = value;\r\n\t\t\t\t\tKenseo.popup.data[key.substr(7)] = value; // temporary fix\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\r\n\t\t\t// return the filled data\r\n\t\t\treturn data;\r\n\t\t}\r\n\t}\r\n})()"],"sourceRoot":"/source/"}
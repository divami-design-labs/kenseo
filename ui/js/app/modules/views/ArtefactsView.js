Kenseo.views.Artefacts = Backbone.View.extend({
    // The DOM Element associated with this view
    el: '.review-requests-content',
    itemView: function itemView(x) {
        return new Kenseo.views.Artefact(x);
    },
    // View constructor
    initialize: function initialize(payload) {
        this.data = payload.data;
        this.colStr = payload.colStr;
        this.el = payload.el;
        this.$el.html(this.template);
        this.preLoader = payload.preLoader;
        this.id = payload.id;
        // this.payload = payload;
        this.render();
    },
    render: function render() {
        sb.renderXTemplate(this);

        return this;
    }
});

Kenseo.views.Artefact = Backbone.View.extend({
    // The DOM Element associated with this view
    tagName: 'a',
    className: 'review-request-item',
    template: _.template(templates['artefact']),
    // View constructor
    initialize: function initialize() {
        this.listenTo(this.model, 'remove', this.remove);
    },
    events: {
        'click .popup-click': 'openPopup',
        'click .artefact-cur-version': 'toggleVersions'
    },
    render: function render() {
        var data = this.model.toJSON();
        var html = this.template({ data: data });
        this.$el.append(html);
        var dataComparer = -1;
        this.$el.attr('data-pass', (function () {
            if (dataComparer == data.linkedId) {
                dataComparer = data.linkedId;
                return 1;
            } else {
                dataComparer = data.linkedId;
                return 0;
            }
        })());

        this.$el.attr('href', '#documentview/' + data.versionId);

        return this;
    },
    openPopup: function openPopup(e) {
        e.preventDefault();
        var model = this.model.collection.get($(e.currentTarget).data('id'));
        sb.setPopupData(model.toJSON());

        Kenseo.currentModel = model;
    },
    toggleVersions: function toggleVersions(e) {
        var $self = $(this);
        var num = +$self.html().substr(1);
        if (num > 0) {
            $self.toggleClass('active');
        }
    }
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2JhYmVsLWFwcC9tb2R1bGVzL3ZpZXdzL0FydGVmYWN0c1ZpZXcuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTSxDQUFDLEtBQUssQ0FBQyxTQUFTLEdBQUcsUUFBUSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUM7O0FBRTFDLE1BQUUsRUFBRSwwQkFBMEI7QUFDOUIsWUFBUSxFQUFFLFNBQVMsUUFBUSxDQUFDLENBQUMsRUFBRTtBQUMzQixlQUFPLElBQUksTUFBTSxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUM7S0FDdkM7O0FBRUQsY0FBVSxFQUFFLFNBQVMsVUFBVSxDQUFDLE9BQU8sRUFBRTtBQUNyQyxZQUFJLENBQUMsSUFBSSxHQUFHLE9BQU8sQ0FBQyxJQUFJLENBQUM7QUFDekIsWUFBSSxDQUFDLE1BQU0sR0FBRyxPQUFPLENBQUMsTUFBTSxDQUFDO0FBQzdCLFlBQUksQ0FBQyxFQUFFLEdBQUcsT0FBTyxDQUFDLEVBQUUsQ0FBQztBQUNyQixZQUFJLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7QUFDN0IsWUFBSSxDQUFDLFNBQVMsR0FBRyxPQUFPLENBQUMsU0FBUyxDQUFDO0FBQ25DLFlBQUksQ0FBQyxFQUFFLEdBQUcsT0FBTyxDQUFDLEVBQUU7O0FBQUMsQUFFckIsWUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDO0tBQ2pCO0FBQ0QsVUFBTSxFQUFFLFNBQVMsTUFBTSxHQUFHO0FBQ3RCLFVBQUUsQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLENBQUM7O0FBRXpCLGVBQU8sSUFBSSxDQUFDO0tBQ2Y7Q0FDSixDQUFDLENBQUM7O0FBRUgsTUFBTSxDQUFDLEtBQUssQ0FBQyxRQUFRLEdBQUcsUUFBUSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUM7O0FBRXpDLFdBQU8sRUFBRSxHQUFHO0FBQ1osYUFBUyxFQUFFLHFCQUFxQjtBQUNoQyxZQUFRLEVBQUUsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxTQUFTLENBQUMsVUFBVSxDQUFDLENBQUM7O0FBRTNDLGNBQVUsRUFBRSxTQUFTLFVBQVUsR0FBRztBQUM5QixZQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxLQUFLLEVBQUUsUUFBUSxFQUFFLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztLQUNwRDtBQUNELFVBQU0sRUFBRTtBQUNKLDRCQUFvQixFQUFFLFdBQVc7QUFDakMscUNBQTZCLEVBQUUsZ0JBQWdCO0tBQ2xEO0FBQ0QsVUFBTSxFQUFFLFNBQVMsTUFBTSxHQUFHO0FBQ3RCLFlBQUksSUFBSSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxFQUFFLENBQUM7QUFDL0IsWUFBSSxJQUFJLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsQ0FBQyxDQUFDO0FBQ3pDLFlBQUksQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDO0FBQ3RCLFlBQUksWUFBWSxHQUFHLENBQUMsQ0FBQyxDQUFDO0FBQ3RCLFlBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLFdBQVcsRUFBRSxDQUFDLFlBQVk7QUFDcEMsZ0JBQUksWUFBWSxJQUFJLElBQUksQ0FBQyxRQUFRLEVBQUU7QUFDL0IsNEJBQVksR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDO0FBQzdCLHVCQUFPLENBQUMsQ0FBQzthQUNaLE1BQU07QUFDSCw0QkFBWSxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUM7QUFDN0IsdUJBQU8sQ0FBQyxDQUFDO2FBQ1o7U0FDSixDQUFBLEVBQUcsQ0FBQyxDQUFDOztBQUVOLFlBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxnQkFBZ0IsR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUM7O0FBRXpELGVBQU8sSUFBSSxDQUFDO0tBQ2Y7QUFDRCxhQUFTLEVBQUUsU0FBUyxTQUFTLENBQUMsQ0FBQyxFQUFFO0FBQzdCLFNBQUMsQ0FBQyxjQUFjLEVBQUUsQ0FBQztBQUNuQixZQUFJLEtBQUssR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLFVBQVUsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxhQUFhLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztBQUNyRSxVQUFFLENBQUMsWUFBWSxDQUFDLEtBQUssQ0FBQyxNQUFNLEVBQUUsQ0FBQyxDQUFDOztBQUVoQyxjQUFNLENBQUMsWUFBWSxHQUFHLEtBQUssQ0FBQztLQUMvQjtBQUNELGtCQUFjLEVBQUUsU0FBUyxjQUFjLENBQUMsQ0FBQyxFQUFFO0FBQ3ZDLFlBQUksS0FBSyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQztBQUNwQixZQUFJLEdBQUcsR0FBRyxDQUFDLEtBQUssQ0FBQyxJQUFJLEVBQUUsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDbEMsWUFBSSxHQUFHLEdBQUcsQ0FBQyxFQUFFO0FBQ1QsaUJBQUssQ0FBQyxXQUFXLENBQUMsUUFBUSxDQUFDLENBQUM7U0FDL0I7S0FDSjtDQUNKLENBQUMsQ0FBQyIsImZpbGUiOiJBcnRlZmFjdHNWaWV3LmpzIiwic291cmNlc0NvbnRlbnQiOlsiS2Vuc2VvLnZpZXdzLkFydGVmYWN0cyA9IEJhY2tib25lLlZpZXcuZXh0ZW5kKHtcbiAgICAvLyBUaGUgRE9NIEVsZW1lbnQgYXNzb2NpYXRlZCB3aXRoIHRoaXMgdmlld1xuICAgIGVsOiAnLnJldmlldy1yZXF1ZXN0cy1jb250ZW50JyxcbiAgICBpdGVtVmlldzogZnVuY3Rpb24gaXRlbVZpZXcoeCkge1xuICAgICAgICByZXR1cm4gbmV3IEtlbnNlby52aWV3cy5BcnRlZmFjdCh4KTtcbiAgICB9LFxuICAgIC8vIFZpZXcgY29uc3RydWN0b3JcbiAgICBpbml0aWFsaXplOiBmdW5jdGlvbiBpbml0aWFsaXplKHBheWxvYWQpIHtcbiAgICAgICAgdGhpcy5kYXRhID0gcGF5bG9hZC5kYXRhO1xuICAgICAgICB0aGlzLmNvbFN0ciA9IHBheWxvYWQuY29sU3RyO1xuICAgICAgICB0aGlzLmVsID0gcGF5bG9hZC5lbDtcbiAgICAgICAgdGhpcy4kZWwuaHRtbCh0aGlzLnRlbXBsYXRlKTtcbiAgICAgICAgdGhpcy5wcmVMb2FkZXIgPSBwYXlsb2FkLnByZUxvYWRlcjtcbiAgICAgICAgdGhpcy5pZCA9IHBheWxvYWQuaWQ7XG4gICAgICAgIC8vIHRoaXMucGF5bG9hZCA9IHBheWxvYWQ7XG4gICAgICAgIHRoaXMucmVuZGVyKCk7XG4gICAgfSxcbiAgICByZW5kZXI6IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICAgICAgc2IucmVuZGVyWFRlbXBsYXRlKHRoaXMpO1xuXG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbn0pO1xuXG5LZW5zZW8udmlld3MuQXJ0ZWZhY3QgPSBCYWNrYm9uZS5WaWV3LmV4dGVuZCh7XG4gICAgLy8gVGhlIERPTSBFbGVtZW50IGFzc29jaWF0ZWQgd2l0aCB0aGlzIHZpZXdcbiAgICB0YWdOYW1lOiAnYScsXG4gICAgY2xhc3NOYW1lOiAncmV2aWV3LXJlcXVlc3QtaXRlbScsXG4gICAgdGVtcGxhdGU6IF8udGVtcGxhdGUodGVtcGxhdGVzWydhcnRlZmFjdCddKSxcbiAgICAvLyBWaWV3IGNvbnN0cnVjdG9yXG4gICAgaW5pdGlhbGl6ZTogZnVuY3Rpb24gaW5pdGlhbGl6ZSgpIHtcbiAgICAgICAgdGhpcy5saXN0ZW5Ubyh0aGlzLm1vZGVsLCAncmVtb3ZlJywgdGhpcy5yZW1vdmUpO1xuICAgIH0sXG4gICAgZXZlbnRzOiB7XG4gICAgICAgICdjbGljayAucG9wdXAtY2xpY2snOiAnb3BlblBvcHVwJyxcbiAgICAgICAgJ2NsaWNrIC5hcnRlZmFjdC1jdXItdmVyc2lvbic6ICd0b2dnbGVWZXJzaW9ucydcbiAgICB9LFxuICAgIHJlbmRlcjogZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgICAgICB2YXIgZGF0YSA9IHRoaXMubW9kZWwudG9KU09OKCk7XG4gICAgICAgIHZhciBodG1sID0gdGhpcy50ZW1wbGF0ZSh7IGRhdGE6IGRhdGEgfSk7XG4gICAgICAgIHRoaXMuJGVsLmFwcGVuZChodG1sKTtcbiAgICAgICAgdmFyIGRhdGFDb21wYXJlciA9IC0xO1xuICAgICAgICB0aGlzLiRlbC5hdHRyKCdkYXRhLXBhc3MnLCAoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgaWYgKGRhdGFDb21wYXJlciA9PSBkYXRhLmxpbmtlZElkKSB7XG4gICAgICAgICAgICAgICAgZGF0YUNvbXBhcmVyID0gZGF0YS5saW5rZWRJZDtcbiAgICAgICAgICAgICAgICByZXR1cm4gMTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgZGF0YUNvbXBhcmVyID0gZGF0YS5saW5rZWRJZDtcbiAgICAgICAgICAgICAgICByZXR1cm4gMDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSkoKSk7XG5cbiAgICAgICAgdGhpcy4kZWwuYXR0cignaHJlZicsICcjZG9jdW1lbnR2aWV3LycgKyBkYXRhLnZlcnNpb25JZCk7XG5cbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfSxcbiAgICBvcGVuUG9wdXA6IGZ1bmN0aW9uIG9wZW5Qb3B1cChlKSB7XG4gICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgdmFyIG1vZGVsID0gdGhpcy5tb2RlbC5jb2xsZWN0aW9uLmdldCgkKGUuY3VycmVudFRhcmdldCkuZGF0YSgnaWQnKSk7XG4gICAgICAgIHNiLnNldFBvcHVwRGF0YShtb2RlbC50b0pTT04oKSk7XG5cbiAgICAgICAgS2Vuc2VvLmN1cnJlbnRNb2RlbCA9IG1vZGVsO1xuICAgIH0sXG4gICAgdG9nZ2xlVmVyc2lvbnM6IGZ1bmN0aW9uIHRvZ2dsZVZlcnNpb25zKGUpIHtcbiAgICAgICAgdmFyICRzZWxmID0gJCh0aGlzKTtcbiAgICAgICAgdmFyIG51bSA9ICskc2VsZi5odG1sKCkuc3Vic3RyKDEpO1xuICAgICAgICBpZiAobnVtID4gMCkge1xuICAgICAgICAgICAgJHNlbGYudG9nZ2xlQ2xhc3MoJ2FjdGl2ZScpO1xuICAgICAgICB9XG4gICAgfVxufSk7Il19